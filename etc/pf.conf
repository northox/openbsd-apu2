ext_if="em0"
int_ifs="{ athn0 em1 em2 }"
int_if="em1"

htpc_ip="192.168.1.222"
xbox_ip="192.168.1.201"
xbox_tcp="{ 1863, 3074 }"
xbox_udp="{ 1780, 1863, 3074, 3544, 4500, 8083, 49164 }"

table <bitbucket> const { 131.103.20.160/27 165.254.145.0/26 104.192.143.0/24 }
table <github>    const { 192.30.252.0/22 }
table <pita>      persist file "/etc/pita"
table <flooders>  persist

set skip on lo
set block-policy return
set loginterface egress
set state-defaults pflow

queue up on $ext_if bandwidth 12M burst 20M for 1000ms
  queue htpc parent up bandwidth 6M
  queue std parent up bandwidth 6M default
queue down on $int_ifs bandwidth 32M burst 40M for 1600ms
  queue htpc parent down bandwidth 16M
  queue std parent down bandwidth 16M default

match in on egress scrub (no-df random-id max-mss 1440 reassemble tcp)
match out log on egress from $htpc_ip to any nat-to (egress:0) port 1024:65535 set queue htpc set prio 5
match out log on egress from !$xbox_ip to any nat-to (egress:0) port 1024:65535
match out log on egress from $xbox_ip  to any nat-to (egress:0) static-port
match in on $int_ifs inet proto { tcp udp } to any port 53 rdr-to 192.168.1.1
match in on $int_ifs inet proto udp to any port 123 rdr-to 192.168.1.1

block in quick on egress from <pita>
block out quick on egress to <pita>
pass in quick on $int_ifs from $int_if:network to $int_if:network

block in log
block out

pass out on egress inet keep state
pass out on $int_ifs inet keep state
pass in on $int_ifs inet
pass in on $int_ifs proto esp keep state
pass in on $int_ifs inet from $htpc_ip set queue htpc set prio 5

pass in on egress inet proto tcp from any to (egress) port 22 synproxy state \
    (max-src-conn 40, max-src-conn-rate 10/30, overload <flooders> flush global)
pass in on egress proto tcp from any to (egress) port $xbox_tcp rdr-to $xbox_ip
pass in on egress proto udp from any to (egress) port $xbox_udp rdr-to $xbox_ip
